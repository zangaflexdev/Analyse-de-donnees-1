summary(d$classAge)
histogram(~age |sexe, data=d)
densityplot(~age |sexe, data=d)
bwplot(~age |sexe, data=d)
bwplot(sexe~age, data=d)
t.effectif<-table(d$classAge,d$sexe)
t.effectif
t.prop<-prop.table(t.effectif)
addmargins(t.prop)
t.propligne<-prop.table(t.effectif,margin=1)
addmargins(t.propligne,2)
barplot(t(t.propligne),beside =TRUE,col=1:2)
t.propcolonne<-prop.table(t.effectif,margin=2)
addmargins(t.propcolonne,1)
barplot(t.propcolonne,beside =TRUE,col=1:5)
histogram(~age |sexe, data=d)
densityplot(~age |sexe, data=d)
bwplot(~age |sexe, data=d)
bwplot(sexe~age, data=d)
### ANALYSE BIVARIEE (SEXE ET AGE)
t.effectif<-table(d$classAge,d$sexe)
t.effectif
t.prop<-prop.table(t.effectif)
addmargins(t.prop)
t.propligne<-prop.table(t.effectif,margin=1)
addmargins(t.propligne,2)
barplot(t(t.propligne),beside =TRUE,col=1:2)
t.propcolonne<-prop.table(t.effectif,margin=2)
addmargins(t.propcolonne,1)
barplot(t.propcolonne,beside =TRUE,col=1:5)
##################################### Analyse descriptive de la variable poids###################
## Histogramme pour visualiser la distribution
hist(d$poids)
hist(d$poids, freq = FALSE)
lines(density(d$poids), lwd=2, col="red")# On peut considérer que la distribution est symétrique
boxplot(d$poids)
## Histogramme pour visualiser la distribution
hist(d$age)
hist(d$age, freq = FALSE)
lines(density(d$age), lwd=2, col="red")# On peut considérer que la distribution est symétrique
boxplot(d$age)
# calcul des caractéristiques
summary(d$poids)
max(d$age)
min(d$age)
max(d$poids)
min(d$poids)
me<-mean(d$poids)
med<-median(d$poids)
quantile(d$poids, probs = c(0,0.25,0.5,0.75,1))
## Histogramme pour visualiser la distribution
hist(d$poids)
hist(d$poids, freq = FALSE)
lines(density(d$poids), lwd=2, col="red")# On peut considérer que la distribution est symétrique
## Histogramme pour visualiser la distribution
hist(d$poids)
hist(d$poids, freq = FALSE)
lines(density(d$poids), lwd=2, col="red")# On peut considérer que la distribution est symétrique
# Découpage en classes
?cut
d$classAge<-cut(d$age, breaks = c(18,20,40,60,80,100), include.lowest = TRUE, right = FALSE)
summary(d$classAge)
## Histogramme pour visualiser la distribution
hist(d$poids)
hist(d$poids, freq = FALSE)
lines(density(d$poids), lwd=2, col="red")# On peut considérer que la distribution est symétrique
## Histogramme pour visualiser la distribution
hist(d$poids)
# calcul des caractéristiques
summary(d$poids)
d$classPoids<-cut(d$poids, breaks = c(0,4000,8000,12000,max(d$poids)), include.lowest = TRUE, right = FALSE)
# Découpage en classes
d$classPoids<-cut(d$poids, breaks = c(0,4000,8000,12000,max(d$poids)), include.lowest = TRUE, right = FALSE)
summary(d$classPoids)
# Découpage en classes
d$classPoids<-cut(d$poids, breaks = c(0,4000,8000,12000,max(d$poids)), include.lowest = TRUE, right = FALSE, labels = c("<4000", "4000 - 7999", "8000, 11999", "12000>"))
summary(d$classPoids)
# Découpage en classes
d$classPoids<-cut(d$poids, breaks = c(0,4000,8000,12000,max(d$poids)), include.lowest = TRUE, right = FALSE, labels = c("<4000", "[4000,8000[", "[8000,12000[ ", "12000>"))
summary(d$classPoids)
# GRAPHIQUES
histogram(~age |sexe, data=d)
# GRAPHIQUES
histogram(~poids |sexe, data=d)
densityplot(~poids |sexe, data=d)
bwplot(~poids |sexe, data=d)
bwplot(sexe~poids, data=d)
# ANALYSE BIVARIEE (SEXE ET AGE)
t.effectif<-table(d$classPoids,d$sexe)
t.effectif
t.prop<-prop.table(t.effectif)
addmargins(t.prop)
# LIGNES
t.propligne<-prop.table(t.effectif,margin=1)
addmargins(t.propligne,2)
barplot(t(t.propligne),beside =TRUE,col=1:2)
# COLONNES
t.propcolonne<-prop.table(t.effectif,margin=2)
addmargins(t.propcolonne,1)
barplot(t.propcolonne,beside =TRUE,col=1:5)
barplot(t.propcolonne,beside =TRUE,col=1:4)
barplot(t.propcolonne,beside =TRUE,col=1:4, legend= TRUE)
barplot(t(t.propligne),beside =TRUE,col=1:2, legend=TRUE,  main="Repartition d'homme/femme dans une classe",
ylab="proportions")
barplot(t(t.propligne),beside =TRUE,col=1:2, legend=TRUE,  main="Repartition d'hommes et femmes dans une classe",
ylab="proportions")
# Découpage en classes
d$classheure.tv<-cut(d$heure.tv,  c(0, 1, 2, 3, 6, 12),include.lowest = TRUE, right= FALSE,
labels = c("<1h", "1h-2h", "2h-3h", "3h-6","6h>"))
## Histogramme pour visualiser la distribution
hist(d$heure.tv)
#################################################
###   JOUR 3 CORRECTION DES TP DE MAISON      ###
###   MASTER SI-SD / ESI / UNB                ###
###   03 juin 2022                            ###
###   By Zanga Flex                           ###
#################################################
# Chargement des packages
library(tidyverse)
library(questionr)
library(lattice)
#chargement des donnees hdv dans questionr
data(hdv2003)
d <- hdv2003
#
##################################### Analyse descriptive de la variable âge###################
## Histogramme pour visualiser la distribution
hist(d$age)
hist(d$age, freq = FALSE)
lines(density(d$age), lwd=2, col="red")# On peut considérer que la distribution est symétrique
boxplot(d$age)
# calcul des caractéristiques
summary(d$age)
max(d$age)
min(d$age)
me<-mean(d$age)
med<-median(d$age)
quantile(d$age, probs = c(0,0.25,0.5,0.75,1))
# Découpage en classes
?cut
d$classAge<-cut(d$age, breaks = c(18,20,40,60,80,100), include.lowest = TRUE, right = FALSE)
summary(d$classAge)
# GRAPHIQUES
histogram(~age |sexe, data=d)
densityplot(~age |sexe, data=d)
bwplot(~age |sexe, data=d)
bwplot(sexe~age, data=d)
# ANALYSE BIVARIEE (SEXE ET AGE)
t.effectif<-table(d$classAge,d$sexe)
t.effectif
t.prop<-prop.table(t.effectif)
addmargins(t.prop)
# LIGNES
t.propligne<-prop.table(t.effectif,margin=1)
addmargins(t.propligne,2)
barplot(t(t.propligne),beside =TRUE,col=1:2)
# COLONNES
t.propcolonne<-prop.table(t.effectif,margin=2)
addmargins(t.propcolonne,1)
barplot(t.propcolonne,beside =TRUE,col=1:5)
##################################### Analyse descriptive de la variable poids###################
## Histogramme pour visualiser la distribution
hist(d$poids)
hist(d$poids, freq = FALSE)
lines(density(d$poids), lwd=2, col="red")# On peut considérer que la distribution est symétrique
boxplot(d$poids)
# calcul des caractéristiques
summary(d$poids)
max(d$poids)
min(d$poids)
me<-mean(d$poids)
med<-median(d$poids)
quantile(d$poids, probs = c(0,0.25,0.5,0.75,1))
# Découpage en classes
d$classPoids<-cut(d$poids, breaks = c(0,4000,8000,12000,max(d$poids)), include.lowest = TRUE, right = FALSE, labels = c("<4000", "[4000,8000[", "[8000,12000[ ", "12000>"))
summary(d$classPoids)
# GRAPHIQUES
histogram(~poids |sexe, data=d)
densityplot(~poids |sexe, data=d)
bwplot(~poids |sexe, data=d)
bwplot(sexe~poids, data=d)
# ANALYSE BIVARIEE (SEXE ET POIDS)
t.effectif<-table(d$classPoids,d$sexe)
t.effectif
t.prop<-prop.table(t.effectif)
addmargins(t.prop)
# LIGNES
t.propligne<-prop.table(t.effectif,margin=1)
addmargins(t.propligne,2)
barplot(t(t.propligne),beside =TRUE,col=1:2, legend=TRUE,  main="Repartition d'hommes et femmes dans une classe",
ylab="proportions")
# COLONNES
t.propcolonne<-prop.table(t.effectif,margin=2)
addmargins(t.propcolonne,1)
barplot(t.propcolonne,beside =TRUE,col=1:4, legend= TRUE,  main="Poids x Sexe",
ylab="proportions")
##################################### Analyse descriptive de la variable HEURE.TV###################
## Histogramme pour visualiser la distribution
hist(d$heure.tv)
hist(d$heure.tv, freq = FALSE)
lines(density(d$heure.tv), lwd=2, col="red")# On peut considérer que la distribution est symétrique
boxplot(d$heure.tv)
# calcul des caractéristiques
summary(d$heure.tv)
max(d$heure.tv)
min(d$heure.tv)
me<-mean(d$heure.tv)
med<-median(d$heure.tv)
quantile(d$heure.tv, probs = c(0,0.25,0.5,0.75,1))
# Découpage en classes
d$classheure.tv<-cut(d$heure.tv,  c(0, 1, 2, 3, 6, 12),include.lowest = TRUE, right= FALSE,
labels = c("<1h", "1h-2h", "2h-3h", "3h-6","6h>"))
summary(d$classHeureTv)
# GRAPHIQUES
histogram(~heure.tv |sexe, data=d)
densityplot(~heure.tv |sexe, data=d)
bwplot(~heure.tv |sexe, data=d)
bwplot(sexe~heure.tv, data=d)
# ANALYSE BIVARIEE (SEXE ET heure.tv)
t.effectif<-table(d$classHeureTv,d$sexe)
t.effectif
t.prop<-prop.table(t.effectif)
addmargins(t.prop)
# LIGNES
t.propligne<-prop.table(t.effectif,margin=1)
addmargins(t.propligne,2)
barplot(t(t.propligne),beside =TRUE,col=1:2, legend=TRUE,  main="Repartition d'hommes et femmes dans une classe",
ylab="proportions")
# COLONNES
t.propcolonne<-prop.table(t.effectif,margin=2)
addmargins(t.propcolonne,1)
barplot(t.propcolonne,beside =TRUE,col=1:4, legend= TRUE,  main="heure.tv x Sexe",
ylab="proportions")
## Histogramme pour visualiser la distribution
d$heures.tv <- ordered(d$heures.tv)
hist(d$heure.tv)
d$heures.tv
hist(d$heure.tv)
#################################################
###   JOUR 3 CORRECTION DES TP DE MAISON      ###
###   MASTER SI-SD / ESI / UNB                ###
###   03 juin 2022                            ###
###   By Zanga Flex                           ###
#################################################
# Chargement des packages
library(tidyverse)
library(questionr)
library(lattice)
#chargement des donnees hdv dans questionr
data(hdv2003)
d <- hdv2003
#
##################################### Analyse descriptive de la variable âge###################
## Histogramme pour visualiser la distribution
hist(d$age)
hist(d$age, freq = FALSE)
lines(density(d$age), lwd=2, col="red")# On peut considérer que la distribution est symétrique
boxplot(d$age)
# calcul des caractéristiques
summary(d$age)
max(d$age)
min(d$age)
me<-mean(d$age)
med<-median(d$age)
quantile(d$age, probs = c(0,0.25,0.5,0.75,1))
# Découpage en classes
?cut
d$classAge<-cut(d$age, breaks = c(18,20,40,60,80,100), include.lowest = TRUE, right = FALSE)
summary(d$classAge)
# GRAPHIQUES
histogram(~age |sexe, data=d)
densityplot(~age |sexe, data=d)
bwplot(~age |sexe, data=d)
bwplot(sexe~age, data=d)
# ANALYSE BIVARIEE (SEXE ET AGE)
t.effectif<-table(d$classAge,d$sexe)
t.effectif
t.prop<-prop.table(t.effectif)
addmargins(t.prop)
# LIGNES
t.propligne<-prop.table(t.effectif,margin=1)
addmargins(t.propligne,2)
barplot(t(t.propligne),beside =TRUE,col=1:2)
# COLONNES
t.propcolonne<-prop.table(t.effectif,margin=2)
addmargins(t.propcolonne,1)
barplot(t.propcolonne,beside =TRUE,col=1:5)
##################################### Analyse descriptive de la variable poids###################
## Histogramme pour visualiser la distribution
hist(d$poids)
hist(d$poids, freq = FALSE)
lines(density(d$poids), lwd=2, col="red")# On peut considérer que la distribution est symétrique
boxplot(d$poids)
# calcul des caractéristiques
summary(d$poids)
max(d$poids)
min(d$poids)
me<-mean(d$poids)
med<-median(d$poids)
quantile(d$poids, probs = c(0,0.25,0.5,0.75,1))
# Découpage en classes
d$classPoids<-cut(d$poids, breaks = c(0,4000,8000,12000,max(d$poids)), include.lowest = TRUE, right = FALSE, labels = c("<4000", "[4000,8000[", "[8000,12000[ ", "12000>"))
summary(d$classPoids)
# GRAPHIQUES
histogram(~poids |sexe, data=d)
densityplot(~poids |sexe, data=d)
bwplot(~poids |sexe, data=d)
bwplot(sexe~poids, data=d)
# ANALYSE BIVARIEE (SEXE ET POIDS)
t.effectif<-table(d$classPoids,d$sexe)
t.effectif
t.prop<-prop.table(t.effectif)
addmargins(t.prop)
# LIGNES
t.propligne<-prop.table(t.effectif,margin=1)
addmargins(t.propligne,2)
barplot(t(t.propligne),beside =TRUE,col=1:2, legend=TRUE,  main="Repartition d'hommes et femmes dans une classe",
ylab="proportions")
# COLONNES
t.propcolonne<-prop.table(t.effectif,margin=2)
addmargins(t.propcolonne,1)
barplot(t.propcolonne,beside =TRUE,col=1:4, legend= TRUE,  main="Poids x Sexe",
ylab="proportions")
##################################### Analyse descriptive de la variable HEURE.TV###################
## Histogramme pour visualiser la distribution
d$heures.tv <- ordered(d$heures.tv)
d$heures.tv
hist(d$heure.tv)
hist(d$heure.tv, freq = FALSE)
lines(density(d$heure.tv), lwd=2, col="red")# On peut considérer que la distribution est symétrique
boxplot(d$heure.tv)
# calcul des caractéristiques
summary(d$heure.tv)
max(d$heure.tv)
min(d$heure.tv)
me<-mean(d$heure.tv)
med<-median(d$heure.tv)
quantile(d$heure.tv, probs = c(0,0.25,0.5,0.75,1))
# Découpage en classes
d$classheure.tv<-cut(d$heure.tv,  c(0, 1, 2, 3, 6, 12),include.lowest = TRUE, right= FALSE,
labels = c("<1h", "1h-2h", "2h-3h", "3h-6","6h>"))
summary(d$classHeureTv)
# GRAPHIQUES
histogram(~heure.tv |sexe, data=d)
densityplot(~heure.tv |sexe, data=d)
bwplot(~heure.tv |sexe, data=d)
bwplot(sexe~heure.tv, data=d)
# ANALYSE BIVARIEE (SEXE ET heure.tv)
t.effectif<-table(d$classHeureTv,d$sexe)
t.effectif
t.prop<-prop.table(t.effectif)
addmargins(t.prop)
# LIGNES
t.propligne<-prop.table(t.effectif,margin=1)
addmargins(t.propligne,2)
barplot(t(t.propligne),beside =TRUE,col=1:2, legend=TRUE,  main="Repartition d'hommes et femmes dans une classe",
ylab="proportions")
# COLONNES
t.propcolonne<-prop.table(t.effectif,margin=2)
addmargins(t.propcolonne,1)
barplot(t.propcolonne,beside =TRUE,col=1:4, legend= TRUE,  main="heure.tv x Sexe",
ylab="proportions")
# Découpage en classes
d$classheure.tv<-cut(d$heure.tv[,1],  c(0, 1, 2, 3, 6, 12),include.lowest = TRUE, right= FALSE,
labels = c("<1h", "1h-2h", "2h-3h", "3h-6","6h>"))
# Découpage en classes
d$classheure.tv<-cut(d$heure.tv[,paste(i, 0:1, sep = ".")],  c(0, 1, 2, 3, 6, 12),include.lowest = TRUE, right= FALSE,
labels = c("<1h", "1h-2h", "2h-3h", "3h-6","6h>"))
# Chargement des packages
library(tidyverse)
#chargement des donnees mtcar dans questionr
data("mtcars")
#creation de la table D
D <- within(mtcars, {
vs <- factor(vs, labels = c("V", "S")),
am <- factor(am, labels = c("automatic", "manual")),
cyl <- ordered(cyl),
gear <- ordered(gear),
carb <- ordered(carb)
})
gear <- ordered(gear)
am <- factor(am, labels = c("automatic", "manual"))
D <- within(mtcars, {
vs <- factor(vs, labels = c("V", "S"))
am <- factor(am, labels = c("automatic", "manual"))
cyl <- ordered(cyl)
gear <- ordered(gear)
carb <- ordered(carb)
})
summary(D)
# MANIPULATION DES DONNEES AVEC dyplr
D
# filtrer ou selectionner les donnees
filter(D, am=="manual")
# selectionner des colonnes
select(D, vs, am)
select(filter(D, am=="manual"), vs, am)
# le pipe permet de faire plusieurs requetes en une commande
D %>% filter(mpg > 20) %>% select(mpg, hp)
# modifier ou creer des variables
D %>%
filter(am == "manual") %>%
select(vs, am)
# modifier ou creer des variables
D %>%
mutate(type="voiture")
## vitesse sup a 200 est grosse voiture
D %>%
filter(hp>200) %>%
mutate(type="Grosse voiture")
D %>%
mutate(type2 = vs + " " + cyl)
D %>%
mutate(type2 = vs . " " . cyl)
# EXERCICE
## Creer la colonne type qui combine le type de moteur et le nombre de cylindre
?cat
D %>%
mutate(type2 = cat(vs, cyl, sep=" "))
D %>%
mutate(type2 = cat(vs, cyl, sep=" "))
D %>%
mutate(type2 = paste(vs, cyl, sep=" "))
D %>%
mutate(type2 = paste(vs, cyl, sep="-"))
D
# Visualisation des donnees avec ggplot2
ggplot(cars, aes(x=mpg))
ggplot(D, aes(x=mpg))
+ geom_histogram()
# Visualisation des donnees avec ggplot2
ggplot(D, aes(x=mpg)) + geom_histogram()
ggplot(D, aes(x=mpg)) + geom_histogram(bins = 10, fill="khaki")
ggplot(D, aes(x=mpg)) + geom_histogram(bins = 50, fill="khaki")
ggplot(D, aes(x=mpg)) + geom_histogram(bins = 10, fill="khaki")
ggplot(D, aes(x=mpg)) + geom_bar(bins = 10, fill="khaki")
ggplot(D, aes(x=mpg)) + geom_bar()
ggplot(D, aes(x=cyl)) + geom_bar()
ggplot(D) + geom_point(aes(x=wt, y=hp), color = "darkgreen", size= 3, alpha = .3)
ggplot(D) + geom_boxplot(aes(x=vs, y=hp), color = "red", fill="wheat",)
ggplot(D) + geom_point(aes(x=vs, y=hp,  color = vs), size= 3, alpha = .3)
ggplot(D) + geom_point(aes(x=wt, y=hp,  color = vs), size= 3, alpha = .3)
ggplot(D) + geom_point(aes(x=wt, y=hp,  color = vs), size= 3, alpha = 3)
ggplot(D) + geom_point(aes(x=wt, y=hp, shape=vs,  color = wt), size= 3, alpha = 3)
ggplot(D) + geom_point(aes(x=wt, y=hp, shape=vs,  color = cyl), size= 3, alpha = 3)
D %>%
mutate(type = paste(vs, cyl, sep="-")) %>%
D %>%
mutate(type = paste(vs, cyl, sep="-")) %>%
ggplot() +
geom_point(aes(x=wt, y=hp, shape=vs,  color = cyl), size= 3) +
geom_text(aes(x=wt, y=hp, label=type,  color = cyl), nudge_y = 10)
D %>%
mutate(type = paste(vs, cyl, sep="-")) %>%
ggplot() +
geom_point(aes(x=wt, y=hp, shape=vs,  color = cyl), size= 3) +
geom_text(aes(x=wt, y=hp, label=type,  color = cyl), nudge_y = 10)
D %>%
mutate(type = paste(vs, cyl, sep="")) %>%
ggplot() +
geom_point(aes(x=wt, y=hp, shape=vs,  color = cyl), size= 3) +
geom_text(aes(x=wt, y=hp, label=type,  color = cyl), nudge_y = 10)
D %>%
mutate(type = paste(vs, cyl, sep="")) %>%
ggplot(x=wt, y=hp,) +
geom_point(aes(shape=vs,  color = cyl), size= 3) +
geom_text(aes(label=type,  color = cyl), nudge_y = 10) +
geom_smooth(method = "lm")
D %>%
mutate(type = paste(vs, cyl, sep="")) %>%
ggplot(x=wt, y=hp) +
geom_point(aes(shape=vs,  color = cyl), size= 3) +
geom_text(aes(label=type,  color = cyl), nudge_y = 10) +
geom_smooth(method = "lm")
D %>%
mutate(type = paste(vs, cyl, sep="")) %>%
ggplot(aes(x=wt, y=hp)) +
geom_point(aes(shape=vs,  color = cyl), size= 3) +
geom_text(aes(label=type,  color = cyl), nudge_y = 10) +
geom_smooth(method = "lm")
ggplot(D) +
geom_boxplot(aes(x=cyl, y=mpg), fill= "wheat", color="red")
?mtcars
ggplot(D) +
geom_point(aes(x=hp, x=mpg) fill= "wheat", color="red")
ggplot(D) +
geom_point(aes(x=hp, x=mpg), fill= "wheat", color="red")
ggplot(D) +
geom_point(aes(x=hp, y=mpg), fill= "wheat", color="red")
#modele simple comparer a 2 variables
cor(d$hp, d$mpg)  # correlation lineaire de pearson
#modele simple comparer a 2 variables
cor(D$hp, D$mpg)  # correlation lineaire de pearson
cor(D$hp, D$mpg, method = "pearson")  # correlation lineaire de pearson
cor(D$hp, D$mpg, method = "sppearman")  # correlation lineaire de pearson
cor(D$hp, D$mpg, method = "spearman")  # correlation lineaire de pearson
# Expliquer mpg par rapport a hp
mod1 <- lm(mpg ~ hp, data=hp)
# Expliquer mpg par rapport a hp
mod1 <- lm(mpg ~ hp, data=D)
summary(mod1)
summary(mod1)
#ainsi on a
#ainsi on a
# mpg = alpha + beta*hp
#ainsi on a
# mpg = alpha + beta*hp
#dans notre cas alpha=30 et beta= -0.06823
mod2 <- lm(mpg ~ vs, data=D)
summary(mod2)
mod3 <- lm(mpg ~ vs + hp + wt + cyl, data=D)
summary(mod3)
